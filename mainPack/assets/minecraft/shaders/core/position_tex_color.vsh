#version 150
layout(std140) uniform DynamicTransforms{mat4 ModelViewMat;vec4 ColorModulator;vec3 ModelOffset;mat4 TextureMat;float LineWidth;};layout(std140) uniform Projection{mat4 ProjMat;};uniform sampler2D Sampler0;in vec3 Position;in vec2 UV0;in vec4 Color;out vec2 texCoord0;out vec4 vertexColor;const vec2 corners[4]=vec2[4](vec2(1.,0.),vec2(0.,0.),vec2(0.,1.),vec2(1.,1.));vec4 getVertexColor(sampler2D Sampler,int vertexID,vec2 coords){vec2 size=1./textureSize(Sampler,0);return textureLod(Sampler,coords-(corners[vertexID%4]-0.5)*size,-9999);}void main(){texCoord0=UV0;vertexColor=Color;vec4 color=getVertexColor(Sampler0,gl_VertexID,texCoord0);if(color.r==38./255.&&color.g==26./255.&&color.b==28./255.)gl_Position=ProjMat*ModelViewMat*vec4(Position+vec3(-5.,0.,0.),1.);else if(color.r==37./255.&&color.g==40./255.&&color.b==30./255.)gl_Position=ProjMat*ModelViewMat*vec4(Position+vec3(-5.,0.,0.),1.);else gl_Position=ProjMat*ModelViewMat*vec4(Position,1.);}